=begin
#CLOUD API

#IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.

The version of the OpenAPI document: 6.0-SDK.3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1-SNAPSHOT

=end

require 'date'
require 'time'

module Ionoscloud
  class Type
    DATACENTER = "datacenter".freeze
    SERVER = "server".freeze
    VOLUME = "volume".freeze
    NIC = "nic".freeze
    LOADBALANCER = "loadbalancer".freeze
    LOCATION = "location".freeze
    FIREWALL_RULE = "firewall-rule".freeze
    FLOW_LOG = "flow-log".freeze
    IMAGE = "image".freeze
    SNAPSHOT = "snapshot".freeze
    LAN = "lan".freeze
    IPBLOCK = "ipblock".freeze
    PCC = "pcc".freeze
    CONTRACT = "contract".freeze
    USER = "user".freeze
    GROUP = "group".freeze
    COLLECTION = "collection".freeze
    RESOURCE = "resource".freeze
    REQUEST = "request".freeze
    REQUEST_STATUS = "request-status".freeze
    S3KEY = "s3key".freeze
    BACKUPUNIT = "backupunit".freeze
    LABEL = "label".freeze
    K8S = "k8s".freeze
    NODEPOOL = "nodepool".freeze
    TEMPLATE = "template".freeze
    NETWORKLOADBALANCER = "networkloadbalancer".freeze
    FORWARDING_RULE = "forwarding-rule".freeze
    NATGATEWAY = "natgateway".freeze
    NATGATEWAY_RULE = "natgateway-rule".freeze
    NODE = "node".freeze
    APPLICATIONLOADBALANCER = "applicationloadbalancer".freeze
    TARGET_GROUP = "target-group".freeze

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      constantValues = Type.constants.select { |c| Type::const_get(c) == value }
      raise "Invalid ENUM value #{value} for class #Type" if constantValues.empty?
      value
    end
  end
end

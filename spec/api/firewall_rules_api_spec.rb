=begin
#CLOUD API

#IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.

The version of the OpenAPI document: 6.0-SDK.3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Ionoscloud::FirewallRulesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FirewallRulesApi' do
  before do
    # run before each test
    @api_instance = Ionoscloud::FirewallRulesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FirewallRulesApi' do
    it 'should create an instance of FirewallRulesApi' do
      expect(@api_instance).to be_instance_of(Ionoscloud::FirewallRulesApi)
    end
  end

  # unit tests for datacenters_servers_nics_firewallrules_delete
  # Delete a Firewall Rule
  # Removes the specified firewall rule.
  # @param datacenter_id The unique ID of the data center.
  # @param server_id The unique ID of the Server
  # @param nic_id The unique ID of the NIC
  # @param firewallrule_id The unique ID of the Firewall Rule
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :pretty Controls whether the response is pretty-printed (with indentations and new lines).
  # @option opts [Integer] :depth Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children&#39;s children are included.  - depth&#x3D;... and so on
  # @option opts [Integer] :x_contract_number Users with multiple contracts must provide the contract number, against which all API requests are to be executed.
  # @return [nil]
  describe 'datacenters_servers_nics_firewallrules_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for datacenters_servers_nics_firewallrules_find_by_id
  # Retrieve a Firewall Rule
  # Retrieves the attributes of a given firewall rule.
  # @param datacenter_id The unique ID of the data center.
  # @param server_id The unique ID of the Server
  # @param nic_id The unique ID of the NIC
  # @param firewallrule_id The unique ID of the Firewall Rule
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :pretty Controls whether the response is pretty-printed (with indentations and new lines).
  # @option opts [Integer] :depth Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children&#39;s children are included.  - depth&#x3D;... and so on
  # @option opts [Integer] :x_contract_number Users with multiple contracts must provide the contract number, against which all API requests are to be executed.
  # @return [FirewallRule]
  describe 'datacenters_servers_nics_firewallrules_find_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for datacenters_servers_nics_firewallrules_get
  # List Firewall Rules
  # Retrieves a list of firewall rules associated with a particular network interface.
  # @param datacenter_id The unique ID of the data center.
  # @param server_id The unique ID of the Server
  # @param nic_id The unique ID of the NIC
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :pretty Controls whether the response is pretty-printed (with indentations and new lines).
  # @option opts [Integer] :depth Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children&#39;s children are included.  - depth&#x3D;... and so on
  # @option opts [Integer] :x_contract_number Users with multiple contracts must provide the contract number, against which all API requests are to be executed.
  # @option opts [Integer] :offset The first element (from the complete list of the elements) to include in the response (use together with limit for pagination).
  # @option opts [Integer] :limit The maximum number of elements to return (use together with offset for pagination).
  # @return [FirewallRules]
  describe 'datacenters_servers_nics_firewallrules_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for datacenters_servers_nics_firewallrules_patch
  # Partially Modify a Firewall Rule
  # You can use update attributes of a resource.
  # @param datacenter_id The unique ID of the data center.
  # @param server_id The unique ID of the Server
  # @param nic_id The unique ID of the NIC
  # @param firewallrule_id The unique ID of the Firewall Rule
  # @param firewallrule Modified Firewall Rule
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :pretty Controls whether the response is pretty-printed (with indentations and new lines).
  # @option opts [Integer] :depth Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children&#39;s children are included.  - depth&#x3D;... and so on
  # @option opts [Integer] :x_contract_number Users with multiple contracts must provide the contract number, against which all API requests are to be executed.
  # @return [FirewallRule]
  describe 'datacenters_servers_nics_firewallrules_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for datacenters_servers_nics_firewallrules_post
  # Create a Firewall Rule
  # This will add a Firewall Rule to the network interface.
  # @param datacenter_id The unique ID of the data center.
  # @param server_id The unique ID of the server
  # @param nic_id The unique ID of the NIC
  # @param firewallrule Firewall Rule to be created
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :pretty Controls whether the response is pretty-printed (with indentations and new lines).
  # @option opts [Integer] :depth Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children&#39;s children are included.  - depth&#x3D;... and so on
  # @option opts [Integer] :x_contract_number Users with multiple contracts must provide the contract number, against which all API requests are to be executed.
  # @return [FirewallRule]
  describe 'datacenters_servers_nics_firewallrules_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for datacenters_servers_nics_firewallrules_put
  # Modify a Firewall Rule
  # You can use update attributes of a resource.
  # @param datacenter_id The unique ID of the data center.
  # @param server_id The unique ID of the Server
  # @param nic_id The unique ID of the NIC
  # @param firewallrule_id The unique ID of the Firewall Rule
  # @param firewallrule Modified Firewall Rule
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :pretty Controls whether the response is pretty-printed (with indentations and new lines).
  # @option opts [Integer] :depth Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children&#39;s children are included.  - depth&#x3D;... and so on
  # @option opts [Integer] :x_contract_number Users with multiple contracts must provide the contract number, against which all API requests are to be executed.
  # @return [FirewallRule]
  describe 'datacenters_servers_nics_firewallrules_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
